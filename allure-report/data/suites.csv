"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sat Apr 06 20:53:49 BRT 2024","Sat Apr 06 20:53:52 BRT 2024","3166","","offeredService.OfferedServiceDeleteTest","","offeredService.OfferedServiceDeleteTest","shouldDeleteOfferedServiceByIdWithSuccess","OfferedService deletion by valid id test with success","This test attempts to delete an already saved offeredService."
"passed","Sat Apr 06 20:54:15 BRT 2024","Sat Apr 06 20:54:19 BRT 2024","3344","","barber.BarberDeleteTest","","barber.BarberDeleteTest","shouldDeleteBarberByIdWithSuccess","Barber deletion by valid id test with success","This test attempts to delete an already saved barber."
"passed","Sat Apr 06 20:54:53 BRT 2024","Sat Apr 06 20:54:56 BRT 2024","3368","","customer.CustomerDeleteTest","","customer.CustomerDeleteTest","shouldDeleteCustomerByIdWithSuccess","Customer deletion by valid id test with success","This test attempts to delete an already saved customer."
"passed","Sat Apr 06 20:55:13 BRT 2024","Sat Apr 06 20:55:14 BRT 2024","926","","expense.ExpenseGetTest","","expense.ExpenseGetTest","shouldGetAllExpensesWithSuccess","Get all Expenses with success","This test attempts to find all expenses saved in the database."
"passed","Sat Apr 06 20:53:47 BRT 2024","Sat Apr 06 20:53:48 BRT 2024","797","","barber.BarberPostTest","","barber.BarberPostTest","shouldSaveBarberWithEmptyDataWithoutSuccess","Save an invalid Barber test without success","This test attempts to save a new invalid barber in the database."
"passed","Sat Apr 06 20:55:03 BRT 2024","Sat Apr 06 20:55:04 BRT 2024","788","","customer.CustomerPostTest","","customer.CustomerPostTest","shouldSaveCustomerWithBirthdayWithoutSuccess","Save an invalid Customer test without success","This test attempts to save a new invalid customer in the database."
"passed","Sat Apr 06 20:53:44 BRT 2024","Sat Apr 06 20:53:45 BRT 2024","847","","barber.BarberPostTest","","barber.BarberPostTest","shouldSaveBarberWithEmptyIsOwnerWithoutSuccess","Save an invalid Barber test without success","This test attempts to save a new invalid barber in the database."
"passed","Sat Apr 06 20:54:58 BRT 2024","Sat Apr 06 20:54:59 BRT 2024","1110","","offeredService.OfferedServicePostTest","","offeredService.OfferedServicePostTest","shouldSaveOfferedServiceWithSuccess","Save a new valid OfferedService test with success","This test attempts to save a new valid offeredService in the database."
"passed","Sat Apr 06 20:54:59 BRT 2024","Sat Apr 06 20:55:00 BRT 2024","781","","offeredService.OfferedServicePostTest","","offeredService.OfferedServicePostTest","shouldSaveOfferedServiceWithEmptyNameWithoutSuccess","Save an invalid OfferedService test without success","This test attempts to save a new invalid offeredService in the database."
"passed","Sat Apr 06 20:55:06 BRT 2024","Sat Apr 06 20:55:06 BRT 2024","789","","customer.CustomerPostTest","","customer.CustomerPostTest","shouldSaveCustomerWithEmptyNameWithoutSuccess","Save an invalid Customer test without success","This test attempts to save a new invalid customer in the database."
"passed","Sat Apr 06 20:55:02 BRT 2024","Sat Apr 06 20:55:03 BRT 2024","768","","customer.CustomerPostTest","","customer.CustomerPostTest","shouldSaveCustomerWithInvalidPhoneNumberWithoutSuccess","Save an invalid Customer test without success","This test attempts to save a new invalid customer in the database."
"passed","Sat Apr 06 20:53:15 BRT 2024","Sat Apr 06 20:53:19 BRT 2024","3709","","barber.BarberPutTest","","barber.BarberPutTest","shouldUpdateBarberWithSuccess","Update a Barber by valid ID using valid data with success","This test attempts to update an existent barber in the database."
"passed","Sat Apr 06 20:54:57 BRT 2024","Sat Apr 06 20:54:58 BRT 2024","790","","offeredService.OfferedServicePostTest","","offeredService.OfferedServicePostTest","shouldSaveOfferedServiceWithEmptyValueWithoutSuccess","Save an invalid OfferedService test without success","This test attempts to save a new invalid offeredService in the database."
"passed","Sat Apr 06 20:54:25 BRT 2024","Sat Apr 06 20:54:26 BRT 2024","1113","","product.ProductPostTest","","product.ProductPostTest","shouldSaveProductWithSuccess","Save a new valid Product test with success","This test attempts to save a new valid product in the database."
"passed","Sat Apr 06 20:52:57 BRT 2024","Sat Apr 06 20:53:07 BRT 2024","9426","","expense.ExpensePutTest","","expense.ExpensePutTest","shouldUpdateExpenseWithInvalidIdWithoutSuccess","Update a Expense by invalid ID using valid data without success","This test attempts to update an existent expense in the database."
"passed","Sat Apr 06 20:53:41 BRT 2024","Sat Apr 06 20:53:44 BRT 2024","3188","","product.ProductPutTest","","product.ProductPutTest","shouldUpdateProductWithInvalidIdWithoutSuccess","Update a Product by invalid ID using valid data without success","This test attempts to update an existent product in the database."
"passed","Sat Apr 06 20:54:09 BRT 2024","Sat Apr 06 20:54:12 BRT 2024","2986","","expense.ExpensePostTest","","expense.ExpensePostTest","shouldSaveExpenseWithEmptyBarberIdWithoutSuccess","Save an invalid Expense test without success","This test attempts to save a new invalid expense in the database."
"passed","Sat Apr 06 20:53:46 BRT 2024","Sat Apr 06 20:53:47 BRT 2024","1127","","barber.BarberPostTest","","barber.BarberPostTest","shouldSaveBarberWithSuccess","Save a new valid Barber test with success","This test attempts to save a new valid barber in the database."
"passed","Sat Apr 06 20:54:31 BRT 2024","Sat Apr 06 20:54:32 BRT 2024","922","","product.ProductDeleteTest","","product.ProductDeleteTest","shouldDeleteProductByIdWithEmptyIdWithoutSuccess","Product deletion by empty ID test without success","This test attempts to delete an already saved product using an empty Id."
"passed","Sat Apr 06 20:55:01 BRT 2024","Sat Apr 06 20:55:02 BRT 2024","770","","customer.CustomerPostTest","","customer.CustomerPostTest","shouldSaveCustomerWithEmptyDataWithoutSuccess","Save an invalid Customer test without success","This test attempts to save a new invalid customer in the database."
"passed","Sat Apr 06 20:53:53 BRT 2024","Sat Apr 06 20:53:54 BRT 2024","948","","offeredService.OfferedServiceDeleteTest","","offeredService.OfferedServiceDeleteTest","shouldDeleteOfferedServiceByIdWithInvalidIdWithoutSuccess","OfferedService deletion by invalid ID test without success","This test attempts to delete an already saved offeredService using an invalid Id."
"passed","Sat Apr 06 20:55:07 BRT 2024","Sat Apr 06 20:55:12 BRT 2024","5376","","expense.ExpenseGetTest","","expense.ExpenseGetTest","shouldGetExpenseByIdWithSuccess","Get a Expense by valid ID with success","This test attempts to find an already saved expense using an valid Id."
"passed","Sat Apr 06 20:53:31 BRT 2024","Sat Apr 06 20:53:32 BRT 2024","927","","customer.CustomerGetTest","","customer.CustomerGetTest","shouldGetAllCustomersWithSuccess","Get all Customers with success","This test attempts to find all customers saved in the database."
"passed","Sat Apr 06 20:53:19 BRT 2024","Sat Apr 06 20:53:22 BRT 2024","3515","","barber.BarberPutTest","","barber.BarberPutTest","shouldUpdateBarberWithInvalidIdWithoutSuccess","Update a Barber by invalid ID using valid data without success","This test attempts to update an existent barber in the database."
"passed","Sat Apr 06 20:55:04 BRT 2024","Sat Apr 06 20:55:05 BRT 2024","771","","customer.CustomerPostTest","","customer.CustomerPostTest","shouldSaveCustomerWithEmptyPhoneNumberWithoutSuccess","Save an invalid Customer test without success","This test attempts to save a new invalid customer in the database."
"passed","Sat Apr 06 20:53:37 BRT 2024","Sat Apr 06 20:53:41 BRT 2024","3429","","product.ProductPutTest","","product.ProductPutTest","shouldUpdateProductWithSuccess","Update a Product by valid ID using valid data with success","This test attempts to update an existent product in the database."
"passed","Sat Apr 06 20:54:22 BRT 2024","Sat Apr 06 20:54:25 BRT 2024","3061","","offeredService.OfferedServiceGetTest","","offeredService.OfferedServiceGetTest","shouldGetOfferedServiceByIdWithSuccess","Get a OfferedService by valid ID with success","This test attempts to find an already saved offeredService using an valid Id."
"passed","Sat Apr 06 20:54:28 BRT 2024","Sat Apr 06 20:54:29 BRT 2024","796","","product.ProductPostTest","","product.ProductPostTest","shouldSaveProductWithEmptyDataWithoutSuccess","Save an invalid Product test without success","This test attempts to save a new invalid product in the database."
"passed","Sat Apr 06 20:54:32 BRT 2024","Sat Apr 06 20:54:35 BRT 2024","3174","","product.ProductDeleteTest","","product.ProductDeleteTest","shouldDeleteProductByIdWithSuccess","Product deletion by valid id test with success","This test attempts to delete an already saved product."
"passed","Sat Apr 06 20:54:03 BRT 2024","Sat Apr 06 20:54:06 BRT 2024","3665","","expense.ExpensePostTest","","expense.ExpensePostTest","shouldSaveExpenseWithSuccess","Save a new valid Expense test with success","This test attempts to save a new valid expense in the database."
"passed","Sat Apr 06 20:54:26 BRT 2024","Sat Apr 06 20:54:27 BRT 2024","810","","product.ProductPostTest","","product.ProductPostTest","shouldSaveProductWithEmptyPriceWithoutSuccess","Save an invalid Product test without success","This test attempts to save a new invalid product in the database."
"passed","Sat Apr 06 20:55:01 BRT 2024","Sat Apr 06 20:55:01 BRT 2024","829","","offeredService.OfferedServicePostTest","","offeredService.OfferedServicePostTest","shouldSaveOfferedServiceWithEmptyDataWithoutSuccess","Save an invalid OfferedService test without success","This test attempts to save a new invalid offeredService in the database."
"passed","Sat Apr 06 20:54:43 BRT 2024","Sat Apr 06 20:54:46 BRT 2024","2958","","product.ProductGetTest","","product.ProductGetTest","shouldGetProductByIdWithSuccess","Get a Product by valid ID with success","This test attempts to find an already saved product using an valid Id."
"passed","Sat Apr 06 20:54:27 BRT 2024","Sat Apr 06 20:54:28 BRT 2024","784","","product.ProductPostTest","","product.ProductPostTest","shouldSaveProductWithEmptyNameWithoutSuccess","Save an invalid Product test without success","This test attempts to save a new invalid product in the database."
"passed","Sat Apr 06 20:53:55 BRT 2024","Sat Apr 06 20:54:01 BRT 2024","5716","","expense.ExpenseDeleteTest","","expense.ExpenseDeleteTest","shouldDeleteExpenseByIdWithSuccess","Expense deletion by valid id test with success","This test attempts to delete an already saved expense."
"passed","Sat Apr 06 20:54:38 BRT 2024","Sat Apr 06 20:54:42 BRT 2024","3497","","customer.CustomerPutTest","","customer.CustomerPutTest","shouldUpdateCustomerWithInvalidIdWithoutSuccess","Update a Customer by invalid ID using valid data without success","This test attempts to update an existent customer in the database."
"passed","Sat Apr 06 20:53:07 BRT 2024","Sat Apr 06 20:53:15 BRT 2024","8186","","expense.ExpensePutTest","","expense.ExpensePutTest","shouldUpdateExpenseWithSuccess","Update a Expense by valid ID using valid data with success","This test attempts to update an existent expense in the database."
"passed","Sat Apr 06 20:53:46 BRT 2024","Sat Apr 06 20:53:46 BRT 2024","770","","barber.BarberPostTest","","barber.BarberPostTest","shouldSaveBarberWithEmptyNameWithoutSuccess","Save an invalid Barber test without success","This test attempts to save a new invalid barber in the database."
"passed","Sat Apr 06 20:54:49 BRT 2024","Sat Apr 06 20:54:52 BRT 2024","3317","","barber.BarberGetTest","","barber.BarberGetTest","shouldGetBarberByIdWithSuccess","Get a Barber by valid ID with success","This test attempts to find an already saved barber using an valid Id."
"passed","Sat Apr 06 20:53:27 BRT 2024","Sat Apr 06 20:53:30 BRT 2024","3154","","offeredService.OfferedServicePutTest","","offeredService.OfferedServicePutTest","shouldUpdateOfferedServiceWithInvalidIdWithoutSuccess","Update a OfferedService by invalid ID using valid data without success","This test attempts to update an existent offeredService in the database."
"passed","Sat Apr 06 20:54:46 BRT 2024","Sat Apr 06 20:54:47 BRT 2024","923","","product.ProductGetTest","","product.ProductGetTest","shouldGetAllProductsWithSuccess","Get all products with success","This test attempts to find all products saved in the database."
"passed","Sat Apr 06 20:54:21 BRT 2024","Sat Apr 06 20:54:22 BRT 2024","934","","offeredService.OfferedServiceGetTest","","offeredService.OfferedServiceGetTest","shouldGetOfferedServiceByIdWithInvalidIdWithoutSuccess","Get a OfferedService by invalid ID without success","This test attempts to find an already saved offeredService using an invalid Id."
"passed","Sat Apr 06 20:55:12 BRT 2024","Sat Apr 06 20:55:13 BRT 2024","921","","expense.ExpenseGetTest","","expense.ExpenseGetTest","shouldGetExpenseByIdWithInvalidIdWithoutSuccess","Get a Expense by invalid ID without success","This test attempts to find an already saved expense using an invalid Id."
"passed","Sat Apr 06 20:54:19 BRT 2024","Sat Apr 06 20:54:19 BRT 2024","933","","barber.BarberDeleteTest","","barber.BarberDeleteTest","shouldDeleteBarberByIdWithEmptyIdWithoutSuccess","Barber deletion by empty ID test without success","This test attempts to delete an already saved barber using an empty Id."
"passed","Sat Apr 06 20:55:05 BRT 2024","Sat Apr 06 20:55:06 BRT 2024","1137","","customer.CustomerPostTest","","customer.CustomerPostTest","shouldSaveCustomerWithSuccess","Save a new valid Customer test with success","This test attempts to save a new valid customer in the database."
"passed","Sat Apr 06 20:53:45 BRT 2024","Sat Apr 06 20:53:46 BRT 2024","775","","barber.BarberPostTest","","barber.BarberPostTest","shouldSaveBarberWithInvalidPhoneNumberWithoutSuccess","Save an invalid Barber test without success","This test attempts to save a new invalid barber in the database."
"passed","Sat Apr 06 20:54:12 BRT 2024","Sat Apr 06 20:54:15 BRT 2024","2981","","expense.ExpensePostTest","","expense.ExpensePostTest","shouldSaveExpenseWithEmptyTotalValueWithoutSuccess","Save an invalid Expense test without success","This test attempts to save a new invalid expense in the database."
"passed","Sat Apr 06 20:54:20 BRT 2024","Sat Apr 06 20:54:21 BRT 2024","923","","offeredService.OfferedServiceGetTest","","offeredService.OfferedServiceGetTest","shouldGetAllOfferedServicesWithSuccess","Get all offeredServices with success","This test attempts to find all offeredService saved in the database."
"passed","Sat Apr 06 20:55:00 BRT 2024","Sat Apr 06 20:55:01 BRT 2024","783","","offeredService.OfferedServicePostTest","","offeredService.OfferedServicePostTest","shouldSaveOfferedServiceWithNegativeValue","Save an invalid OfferedService test without success","This test attempts to save a new invalid offeredService in the database."
"passed","Sat Apr 06 20:53:32 BRT 2024","Sat Apr 06 20:53:33 BRT 2024","934","","customer.CustomerGetTest","","customer.CustomerGetTest","shouldGetCustomerByIdWithInvalidIdWithoutSuccess","Get a Customer by invalid ID without success","This test attempts to find an already saved customer using an invalid Id."
"passed","Sat Apr 06 20:53:33 BRT 2024","Sat Apr 06 20:53:36 BRT 2024","3357","","customer.CustomerGetTest","","customer.CustomerGetTest","shouldGetCustomerByIdWithSuccess","Get a Customer by valid ID with success","This test attempts to find an already saved customer using an valid Id."
"passed","Sat Apr 06 20:53:23 BRT 2024","Sat Apr 06 20:53:27 BRT 2024","3408","","offeredService.OfferedServicePutTest","","offeredService.OfferedServicePutTest","shouldUpdateOfferedServiceWithSuccess","Update a OfferedService by valid ID using valid data with success","This test attempts to update an existent offeredService in the database."
"passed","Sat Apr 06 20:54:47 BRT 2024","Sat Apr 06 20:54:48 BRT 2024","925","","barber.BarberGetTest","","barber.BarberGetTest","shouldGetBarberByIdWithInvalidIdWithoutSuccess","Get a Barber by invalid ID without success","This test attempts to find an already saved barber using an invalid Id."
"passed","Sat Apr 06 20:54:30 BRT 2024","Sat Apr 06 20:54:31 BRT 2024","947","","product.ProductDeleteTest","","product.ProductDeleteTest","shouldDeleteProductByIdWithInvalidIdWithoutSuccess","Product deletion by invalid ID test without success","This test attempts to delete an already saved product using an invalid Id."
"passed","Sat Apr 06 20:54:06 BRT 2024","Sat Apr 06 20:54:09 BRT 2024","2987","","expense.ExpensePostTest","","expense.ExpensePostTest","shouldSaveExpenseWithNegativeTotalValue","Save an invalid Expense test without success","This test attempts to save a new invalid expense in the database."
"passed","Sat Apr 06 20:54:52 BRT 2024","Sat Apr 06 20:54:53 BRT 2024","923","","customer.CustomerDeleteTest","","customer.CustomerDeleteTest","shouldDeleteCustomerByIdWithEmptyIdWithoutSuccess","Customer deletion by empty ID test without success","This test attempts to delete an already saved customer using an empty Id."
"passed","Sat Apr 06 20:54:19 BRT 2024","Sat Apr 06 20:54:20 BRT 2024","937","","barber.BarberDeleteTest","","barber.BarberDeleteTest","shouldDeleteBarberByIdWithInvalidIdWithoutSuccess","Barber deletion by invalid ID test without success","This test attempts to delete an already saved barber using an invalid Id."
"passed","Sat Apr 06 20:54:02 BRT 2024","Sat Apr 06 20:54:03 BRT 2024","826","","expense.ExpensePostTest","","expense.ExpensePostTest","shouldSaveExpenseWithEmptyDataWithoutSuccess","Save an invalid Expense test without success","This test attempts to save a new invalid expense in the database."
"passed","Sat Apr 06 20:54:48 BRT 2024","Sat Apr 06 20:54:49 BRT 2024","930","","barber.BarberGetTest","","barber.BarberGetTest","shouldGetAllBarbersWithSuccess","Get all Barbers with success","This test attempts to find all barbers saved in the database."
"passed","Sat Apr 06 20:54:56 BRT 2024","Sat Apr 06 20:54:57 BRT 2024","926","","customer.CustomerDeleteTest","","customer.CustomerDeleteTest","shouldDeleteCustomerByIdWithInvalidIdWithoutSuccess","Customer deletion by invalid ID test without success","This test attempts to delete an already saved customer using an invalid Id."
"passed","Sat Apr 06 20:54:01 BRT 2024","Sat Apr 06 20:54:02 BRT 2024","957","","expense.ExpenseDeleteTest","","expense.ExpenseDeleteTest","shouldDeleteExpenseByIdWithEmptyIdWithoutSuccess","Expense deletion by empty ID test without success","This test attempts to delete an already saved expense using an empty Id."
"passed","Sat Apr 06 20:53:52 BRT 2024","Sat Apr 06 20:53:53 BRT 2024","931","","offeredService.OfferedServiceDeleteTest","","offeredService.OfferedServiceDeleteTest","shouldDeleteOfferedServiceByIdWithEmptyIdWithoutSuccess","OfferedService deletion by empty ID test without success","This test attempts to delete an already saved offeredService using an empty Id."
"passed","Sat Apr 06 20:54:42 BRT 2024","Sat Apr 06 20:54:43 BRT 2024","920","","product.ProductGetTest","","product.ProductGetTest","shouldGetProductByIdWithInvalidIdWithoutSuccess","Get a Product by invalid ID without success","This test attempts to find an already saved product using an invalid Id."
"passed","Sat Apr 06 20:54:35 BRT 2024","Sat Apr 06 20:54:38 BRT 2024","3687","","customer.CustomerPutTest","","customer.CustomerPutTest","shouldUpdateCustomerWithSuccess","Update a Customer by valid ID using valid data with success","This test attempts to update an existent customer in the database."
"passed","Sat Apr 06 20:53:48 BRT 2024","Sat Apr 06 20:53:49 BRT 2024","810","","barber.BarberPostTest","","barber.BarberPostTest","shouldSaveBarberWithEmptyPhoneNumberWithoutSuccess","Save an invalid Barber test without success","This test attempts to save a new invalid barber in the database."
"passed","Sat Apr 06 20:54:29 BRT 2024","Sat Apr 06 20:54:30 BRT 2024","777","","product.ProductPostTest","","product.ProductPostTest","shouldSaveProductWithNegativeValue","Save an invalid Product test without success","This test attempts to save a new invalid product in the database."
"passed","Sat Apr 06 20:53:54 BRT 2024","Sat Apr 06 20:53:55 BRT 2024","927","","expense.ExpenseDeleteTest","","expense.ExpenseDeleteTest","shouldDeleteExpenseByIdWithInvalidIdWithoutSuccess","Expense deletion by invalid ID test without success","This test attempts to delete an already saved expense using an invalid Id."
